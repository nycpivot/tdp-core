#@ load("@ytt:data", "data")
---
version: '3.3'
services:
  openldap:
    image: docker.io/bitnami/openldap:2.6.3
    ports:
      - '1389:1389'
      - '1636:1636'
    environment:
      - LDAP_ROOT=o=tap-activation
      - LDAP_ADMIN_USERNAME=admin
      - LDAP_ADMIN_PASSWORD=admin
    volumes:
      - './fixtures/ldap/ldifs:/ldifs'
      - './fixtures/ldap/overlays:/schemas'
  bitbucket:
    image: harbor-repo.vmware.com/dockerhub-proxy-cache/atlassian/bitbucket:8.4.2
    ports:
      - '7990:7990'
      - '7999:7999'
    environment:
      - SETUP_DISPLAYNAME=TPB
      - SETUP_BASEURL=http://localhost
      - SETUP_LICENSE=${BITBUCKET_SERVER_LICENSE}
      - SETUP_SYSADMIN_USERNAME=tpb
      - SETUP_SYSADMIN_PASSWORD=tpb
      - SETUP_SYSADMIN_DISPLAYNAME=tpb
      - SETUP_SYSADMIN_EMAILADDRESS=tpb@example.com
      - SETUP_COMPLETED=true
      - JDBC_DRIVER=org.h2.Driver
      - JDBC_URL=jdbc:h2:/var/atlassian/application-data/bitbucket/shared/data/db;DB_CLOSE_DELAY=-1;DB_CLOSE_ON_EXIT=FALSE
      - JDBC_USER=sa
      - JDBC_PASSWORD=
    volumes:
      - ${HOME}/.tpb-e2e/bitbucket:/var/atlassian/application-data/bitbucket
  tpb:
    #@ if/end not data.values.skip_build:
    build:
      context: ../../..
      dockerfile: packages/backend/Dockerfile
    image: tpb:integration
    depends_on:
      - openldap
    environment:
      - NODE_TLS_REJECT_UNAUTHORIZED=0 #! to skip ssl verification for our Github Enterprise
      - APP_FOLDER=/app
      - LDAP_ENDPOINT=ldap://openldap:1389
      - TECHDOCS_FOLDER=/techdocs
      - APP_ACCELERATOR_HOST=${APP_ACCELERATOR_HOST}
      - AUTH0_CLIENT_ID=${AUTH0_CLIENT_ID}
      - AUTH0_CLIENT_SECRET=${AUTH0_CLIENT_SECRET}
      - AUTH0_DOMAIN=${AUTH0_DOMAIN}
      - AWS_ACCESS_KEY_ID=${AWS_ACCESS_KEY_ID}
      - AWS_SECRET_ACCESS_KEY=${AWS_SECRET_ACCESS_KEY}
      - AZURE_TOKEN=${AZURE_TOKEN}
      - AZURE_TENANT_ID=${AZURE_TENANT_ID}
      - AZURE_CLIENT_ID=${AZURE_CLIENT_ID}
      - AZURE_CLIENT_SECRET=${AZURE_CLIENT_SECRET}
      - BACKEND_SECRET=${BACKEND_SECRET}
      - BACKSTAGE_BASE_URL=${BACKSTAGE_BASE_URL:-http://tpb:7007}
      - BITBUCKET_HOST=bitbucket:7990
      - BITBUCKET_TOKEN=${BITBUCKET_TOKEN}
      - BITBUCKET_CLIENT_ID=${BITBUCKET_CLIENT_ID}
      - BITBUCKET_CLIENT_SECRET=${BITBUCKET_CLIENT_SECRET}
      - GITLAB_TOKEN=${GITLAB_TOKEN}
      - GITHUB_TOKEN=${GITHUB_TOKEN}
      - GITHUB_ENTERPRISE_TOKEN=${GITHUB_ENTERPRISE_TOKEN}
      - GITHUB_APP_CLIENT_ID=${GITHUB_APP_CLIENT_ID}
      - GITHUB_APP_CLIENT_SECRET=${GITHUB_APP_CLIENT_SECRET}
      - GKE_CONTROL_PLANE_ENDPOINT=${GKE_CONTROL_PLANE_ENDPOINT}
      - GKE_APP_LIVE_VIEW_ENDPOINT=${GKE_APP_LIVE_VIEW_ENDPOINT}
      - GKE_SERVICE_ACCOUNT_TOKEN=${GKE_SERVICE_ACCOUNT_TOKEN}
      - GKE_OIDC_CONTROL_PLANE_ENDPOINT=${GKE_OIDC_CONTROL_PLANE_ENDPOINT}
      - GKE_OIDC_CLIENT_ID=${GKE_OIDC_CLIENT_ID}
      - GKE_OIDC_CLIENT_SECRET=${GKE_OIDC_CLIENT_SECRET}
      - OKTA_CLIENT_ID=${OKTA_CLIENT_ID}
      - OKTA_CLIENT_SECRET=${OKTA_CLIENT_SECRET}
      - OKTA_AUDIENCE=${OKTA_AUDIENCE}
    ports:
      - '7007:7007'
    volumes:
      - ../../../examples/techdocs/output:/techdocs
      - ../../../examples:/app/examples
  cypress:
    image: harbor-repo.vmware.com/dockerhub-proxy-cache/cypress/included:12.11.0
    volumes:
      - .:/e2e/cypress
      - ./package.docker-compose.json:/e2e/package.json
      - ../cypress.config.ts:/e2e/cypress.config.ts
      - ./npmrc.example:/e2e/.npmrc
    environment:
      - CYPRESS_baseUrl=http://tpb:7007
      - CYPRESS_AUTH0_SVC_TPB_REFRESH_TOKEN=${CYPRESS_AUTH0_SVC_TPB_REFRESH_TOKEN}
      - CYPRESS_BITBUCKET_CATALOG_PREFIX=bitbucket:7990
      - CYPRESS_BITBUCKET_HOST=bitbucket:7990
      - CYPRESS_BITBUCKET_SVC_TPB_REFRESH_TOKEN=${CYPRESS_BITBUCKET_SVC_TPB_REFRESH_TOKEN}
      - CYPRESS_ESBACK_BACKEND_URL=http://tpb:7007
      - CYPRESS_GITHUB_SVC_TPB_REFRESH_TOKEN=${CYPRESS_GITHUB_SVC_TPB_REFRESH_TOKEN}
      - CYPRESS_GOOGLE_SVC_TPB_INSUFFICIENT_SCOPE_REFRESH_TOKEN=${CYPRESS_GOOGLE_SVC_TPB_INSUFFICIENT_SCOPE_REFRESH_TOKEN}
      - CYPRESS_GOOGLE_SVC_TPB_REFRESH_TOKEN=${CYPRESS_GOOGLE_SVC_TPB_REFRESH_TOKEN}
      - CYPRESS_OKTA_SVC_TPB_REFRESH_TOKEN=${CYPRESS_OKTA_SVC_TPB_REFRESH_TOKEN}
    working_dir: /e2e
    entrypoint: /bin/sh -c "yarn install;yarn run-tests"
