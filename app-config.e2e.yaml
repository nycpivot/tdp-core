# This app-config file is used to configure the internally publish TPB instance,
# used for acceptance testing. It is expected that this instance will be run with
# docker compose
app:
  title: TPB Test Instance
  baseUrl: ${BACKSTAGE_BASE_URL}

organization:
  name: VMware

backend:
  baseUrl: ${BACKSTAGE_BASE_URL}
  listen:
    port: 7007
    host: 0.0.0.0
  csp:
    connect-src: ["'self'", 'http:', 'https:']
  cors:
    origin: ${BACKSTAGE_BASE_URL}
    methods: [GET, POST, PUT, DELETE]
    credentials: true
  database:
    client: better-sqlite3
    connection: ':memory:'
  cache:
    store: memory
  auth:
    keys:
      - secret: ${BACKEND_SECRET}

integrations:
  azure:
    - host: dev.azure.com
      token: ${AZURE_TOKEN}
  github:
    - host: github.com
      token: ${GITHUB_TOKEN}
    - host: cmbu-githubent01.eng.vmware.com
      baseUrl: https://cmbu-githubent01.eng.vmware.com/
      apiBaseUrl: https://cmbu-githubent01.eng.vmware.com/api/v3
      token: ${GITHUB_ENTERPRISE_TOKEN}
  gitlab:
    - host: gitlab.eng.vmware.com
      baseUrl: https://gitlab.eng.vmware.com
      apiBaseUrl: https://gitlab.eng.vmware.com/api/v4/
      token: ${GITLAB_TOKEN}
  bitbucketServer:
    - host: ${BITBUCKET_HOST}
      apiBaseUrl: http://${BITBUCKET_HOST}/rest/api/1.0
      token: ${BITBUCKET_TOKEN}
  awsS3:
    - accessKeyId: ${AWS_ACCESS_KEY_ID}
      secretAccessKey: ${AWS_SECRET_ACCESS_KEY}

catalog:
  processors:
    ldapOrg:
      providers:
        - target: ${LDAP_ENDPOINT}
          users:
            dn: ou=people,o=tap-activation
          groups:
            dn: ou=teams,o=tap-activation
    microsoftGraphOrg:
      providers:
        - target: https://graph.microsoft.com/v1.0
          authority: https://login.microsoftonline.com
          tenantId: ${AZURE_TENANT_ID}
          clientId: ${AZURE_CLIENT_ID}
          clientSecret: ${AZURE_CLIENT_SECRET}
          userFilter: displayName eq 'Benjamin Smith'
          groupFilter: displayName eq 'dap-build'
  providers:
    gitlab:
      tpb:
        host: gitlab.eng.vmware.com
        group: esback/fixtures
        entityFilename: catalog-info.yaml
        schedule:
          frequency: { minutes: 1 }
          timeout: { minutes: 3 }
    github:
      tpb:
        host: cmbu-githubent01.eng.vmware.com
        organization: 'esback'
        catalogPath: '/catalog-info.yaml'
        filters:
          branch: 'main'
  rules:
    - allow:
        [
          Component,
          Domain,
          System,
          API,
          Group,
          User,
          Resource,
          Location,
          Template,
        ]
  locations:
    - type: microsoft-graph-org
      target: https://graph.microsoft.com/v1.0
    - type: azure-discovery
      target: https://dev.azure.com/tap-activation/tanzu-portal-builder
    - type: ldap-org
      target: ${LDAP_ENDPOINT}
      rules:
        - allow: [User, Group]
    - type: file
      target: ${APP_FOLDER}/examples/entities.yaml
    - type: file
      target: ${APP_FOLDER}/examples/template/template.yaml
      rules:
        - allow: [Template]
    - type: file
      target: ${APP_FOLDER}/examples/org.yaml
      rules:
        - allow: [User, Group]
    - type: url
      target: https://gitlab.eng.vmware.com/esback/fixtures/gke-user-a-nginx/-/blob/main/catalog-info.yaml
    - type: url
      target: https://gitlab.eng.vmware.com/esback/fixtures/gke-user-b-nginx/-/blob/main/catalog_info.yaml
    - type: url
      target: https://gitlab.eng.vmware.com/esback/fixtures/gitlab-integration-component/-/blob/main/catalog-info.yaml
    - type: gitlab-discovery
      target: https://gitlab.eng.vmware.com/esback/fixtures/gitlab-processor-component/-/blob/main/catalog-info.yaml
    - type: url
      target: https://github.com/fouadh/foobar-backstage-component/blob/master/github-integration-component.yml
    - type: url
      target: https://cmbu-githubent01.eng.vmware.com/tap-gui/esback-e2e/blob/main/github-enterprise-integration-component.yml
    - type: system-x
      target: 'non empty string'
    - type: url
      target: https://github.com/sample-accelerators/tanzu-java-web-app/blob/main/catalog/catalog-info.yaml
    - type: url
      target: https://github.com/tanzu-demo/tap-gui-catalogs/blob/main/blank/catalog-info.yaml
    - type: s3-discovery
      target: https://tpb-aws-s3-discovery-processor.dev.s3.us-east-1.amazonaws.com/
    - type: url
      target: https://gitlab.eng.vmware.com/esback/fixtures/permission-plugin-integration-test/-/blob/main/catalog-info.yaml

techdocs:
  builder: 'external' # Alternatives - 'external'
  generator:
    runIn: 'docker' # Alternatives - 'local'
  publisher:
    type: 'local' # Alternatives - 'googleGcs' or 'awsS3'. Read documentation for using alternatives.
    local:
      # (Optional). Set this to specify where the generated documentation is stored.
      publishDirectory: ${TECHDOCS_FOLDER}

tpb:
  catalog:
    providers:
      github:
        orgEntity:
          id: production
          orgUrl: 'https://cmbu-githubent01.eng.vmware.com/esback'

kubernetes:
  serviceLocatorMethod:
    type: 'multiTenant'
  clusterLocatorMethods:
    - type: config
      clusters:
        - url: ${GKE_CONTROL_PLANE_ENDPOINT}
          name: gke-cluster
          authProvider: serviceAccount
          serviceAccountToken: ${GKE_SERVICE_ACCOUNT_TOKEN}
          skipTLSVerify: true
          skipMetricsLookup: true
          customResources:
            - group: 'serving.knative.dev'
              apiVersion: 'v1'
              plural: 'configurations'
            - group: 'serving.knative.dev'
              apiVersion: 'v1'
              plural: 'revisions'
            - group: 'serving.knative.dev'
              apiVersion: 'v1'
              plural: 'routes'
            - group: 'serving.knative.dev'
              apiVersion: 'v1'
              plural: 'services'
            - group: 'carto.run'
              apiVersion: 'v1alpha1'
              plural: 'clusterconfigtemplates'
            - group: 'carto.run'
              apiVersion: 'v1alpha1'
              plural: 'clusterdeliveries'
            - group: 'carto.run'
              apiVersion: 'v1alpha1'
              plural: 'clusterdeploymenttemplates'
            - group: 'carto.run'
              apiVersion: 'v1alpha1'
              plural: 'clusterimagetemplates'
            - group: 'carto.run'
              apiVersion: 'v1alpha1'
              plural: 'clusterruntemplates'
            - group: 'carto.run'
              apiVersion: 'v1alpha1'
              plural: 'clustersourcetemplates'
            - group: 'carto.run'
              apiVersion: 'v1alpha1'
              plural: 'clustersupplychains'
            - group: 'carto.run'
              apiVersion: 'v1alpha1'
              plural: 'clustertemplates'
            - group: 'carto.run'
              apiVersion: 'v1alpha1'
              plural: 'deliverables'
            - group: 'carto.run'
              apiVersion: 'v1alpha1'
              plural: 'runnables'
            - group: 'carto.run'
              apiVersion: 'v1alpha1'
              plural: 'workloads'
            - group: 'source.toolkit.fluxcd.io'
              apiVersion: 'v1beta1'
              plural: 'gitrepositories'
            - group: 'conventions.carto.run'
              apiVersion: 'v1alpha1'
              plural: 'podintents'
            - group: 'kpack.io'
              apiVersion: 'v1alpha2'
              plural: 'images'
            - group: 'kpack.io'
              apiVersion: 'v1alpha2'
              plural: 'builds'
            - group: 'scanning.apps.tanzu.vmware.com'
              apiVersion: 'v1beta1'
              plural: 'sourcescans'
            - group: 'scanning.apps.tanzu.vmware.com'
              apiVersion: 'v1beta1'
              plural: 'scanpolicies'
            - group: 'scanning.apps.tanzu.vmware.com'
              apiVersion: 'v1beta1'
              plural: 'imagescans'
            - group: 'scanning.apps.tanzu.vmware.com'
              apiVersion: 'v1beta1'
              plural: 'scantemplates'
            - group: 'source.apps.tanzu.vmware.com'
              apiVersion: 'v1alpha1'
              plural: 'imagerepositories'
            - group: 'tekton.dev'
              apiVersion: 'v1beta1'
              plural: 'pipelineruns'
            - group: 'tekton.dev'
              apiVersion: 'v1beta1'
              plural: 'taskruns'
            - group: 'kappctrl.k14s.io'
              apiVersion: 'v1alpha1'
              plural: 'apps'
            - group: 'networking.internal.knative.dev'
              apiVersion: 'v1alpha1'
              plural: 'serverlessservices'
            - group: 'autoscaling.internal.knative.dev'
              apiVersion: 'v1alpha1'
              plural: 'podautoscalers'
            - group: 'source.apps.tanzu.vmware.com'
              apiVersion: 'v1alpha1'
              plural: 'mavenartifacts'
        - url: ${GKE_OIDC_CONTROL_PLANE_ENDPOINT}
          name: esback-oidc
          authProvider: google
          skipTLSVerify: true
          skipMetricsLookup: false

proxy:
  '/app-live-view':
    target: ${GKE_APP_LIVE_VIEW_ENDPOINT}
    changeOrigin: true
    headers:
      X-Custom-Source: project-star

auth:
  session:
    secret: 'loremipsum'
  providers:
    auth0:
      development:
        clientId: ${AUTH0_CLIENT_ID}
        clientSecret: ${AUTH0_CLIENT_SECRET}
        domain: ${AUTH0_DOMAIN}
    bitbucket:
      development:
        clientId: ${BITBUCKET_CLIENT_ID}
        clientSecret: ${BITBUCKET_CLIENT_SECRET}
    gitlab:
      development:
        clientId: foo
        clientSecret: bar
    github:
      development:
        clientId: ${GITHUB_APP_CLIENT_ID}
        clientSecret: ${GITHUB_APP_CLIENT_SECRET}
    permission-test:
      development:
        clientId: ${GKE_OIDC_CLIENT_ID}
        clientSecret: ${GKE_OIDC_CLIENT_SECRET}
    google:
      development:
        clientId: ${GKE_OIDC_CLIENT_ID}
        clientSecret: ${GKE_OIDC_CLIENT_SECRET}
    onelogin:
      development:
        clientId: foo
        clientSecret: bar
        issuer: baz
    oidc:
      development:
        metadataUrl: https://gitlab.eng.vmware.com/.well-known/openid-configuration
        clientId: foo
        clientSecret: bar
    okta:
      development:
        clientId: ${OKTA_CLIENT_ID}
        clientSecret: ${OKTA_CLIENT_SECRET}
        audience: ${OKTA_AUDIENCE}
  loginPage:
    oidc:
      title: 'custom OIDC provider'
      message: 'customized in appconfig.e2e.yaml'

permission:
  enabled: true
  adminRefs:
    - group:default/admins
    - user:default/user-d
    - user:default/esbacke2e # This is the github login user for e2e tests
    - user:default/guest
