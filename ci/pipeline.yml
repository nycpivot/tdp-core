# To set up this pipeline, assuming you have an TPB target locally setup, run:
# $ make create-pipeline name=$PIPELINE_NAME
---
resource_types:
  - name: slack-notification
    type: docker-image
    source:
      repository: harbor-repo.vmware.com/dockerhub-proxy-cache/cfcommunity/slack-notification-resource
      tag: latest

resources:
  - name: version
    type: semver
    icon: counter
    source:
      driver: s3
      bucket: esback.ci
      key: build/esback/version/((git_branch))
      initial_version: ((initial_version))
      access_key_id: ((aws.deprecated_access_key))
      secret_access_key: ((aws.deprecated_access_secret))
  - name: esback-core
    type: git
    icon: gitlab
    source:
      uri: https://gitlab.eng.vmware.com/esback/core.git
      fetch_tags: false
      branch: ((git_branch))
      username: ((gitlab.username))
      password: ((gitlab.core_token))
  - name: core-image
    type: registry-image
    icon: docker
    source:
      repository: harbor-repo.vmware.com/esback/internal-instance
      username: ((harbor.username))
      password: ((harbor.token))
      tag: latest
  # Integration tests tools
  - name: ytt
    type: github-release
    icon: github
    source:
      owner: vmware-tanzu
      repository: carvel-ytt
      access_token: ((github.access_token))
  - name: cypress-image
    type: registry-image
    icon: docker
    source:
      repository: harbor-repo.vmware.com/dockerhub-proxy-cache/cypress/included
      tag: 8.5.0
  - name: bitbucket-image
    type: registry-image
    icon: docker
    source:
      repository: harbor-repo.vmware.com/dockerhub-proxy-cache/atlassian/bitbucket
      tag: 8.4.2
  - name: slack-alert
    type: slack-notification
    icon: slack
    source:
      url: ((slack.webhook_url))

on_failure_notification: &on_failure_notification
  put: slack-alert
  params:
    text: |
      There was a failure in the *$BUILD_PIPELINE_NAME* pipeline.
      <https://runway-ci-sfo.eng.vmware.com/teams/$BUILD_TEAM_NAME/pipelines/$BUILD_PIPELINE_NAME/jobs/$BUILD_JOB_NAME/builds/$BUILD_NAME|Click here!>

jobs:
  - name: reconfigure
    plan:
      - get: esback-core
        trigger: true
      - set_pipeline: self
        file: esback-core/ci/pipeline.yml
        vars:
          git_branch: ((git_branch))
          initial_version: ((initial_version))
      - set_pipeline: mr-check
        file: esback-core/ci/mr-check.yml
        vars:
          initial_version: ((initial_version))
    on_failure: *on_failure_notification
    on_error: *on_failure_notification
  - name: lint-and-test
    plan:
      - get: code
        resource: esback-core
        passed: [reconfigure]
        trigger: true
      - in_parallel:
          - task: lint
            attempts: 3
            file: code/ci/lint.yml
          - task: test
            attempts: 3
            file: code/ci/unit-test.yml
          - task: builder-lint
            attempts: 3
            file: code/ci/builder-lint.yml
          - task: builder-test
            attempts: 3
            file: code/ci/builder-unit-test.yml
    on_failure: *on_failure_notification
    on_error: *on_failure_notification
  - name: bump
    plan:
      - get: esback-core
        passed: [lint-and-test]
        trigger: true
      - put: version
        params:
          pre: ((git_branch))
    on_failure: *on_failure_notification
    on_error: *on_failure_notification
  - name: build
    plan:
      - in_parallel:
          - get: code
            resource: esback-core
            passed: [bump]
            trigger: true
          - do:
              - get: version
                passed: [bump]
                trigger: true
              - load_var: version
                file: version/version
                reveal: true
      - task: yarn-build
        file: code/ci/yarn-build.yml
      - task: image-build
        privileged: true
        file: code/ci/image-build.yml
      - put: core-image
        params:
          image: image/image.tar
          version: ((.:version))
    on_failure: *on_failure_notification
    on_error: *on_failure_notification
  - name: integration-tests
    plan:
      - in_parallel:
          - get: ytt
          - get: cypress-image
            params: { format: oci }
          - get: bitbucket-image
            params: { format: oci }
          - get: esback-core
            passed: [build]
            trigger: true
          - get: core-image
            params: { format: oci }
            passed: [build]
            trigger: true
      - task: test
        privileged: true
        file: esback-core/ci/integration-tests.yml
        input_mapping:
          code: esback-core
          docker-image: core-image
        vars:
          app_accelerator_host: ((app-accelerator.host))
          auth0_client_id: ((auth0.svc_tpb_client_id))
          auth0_client_secret: ((auth0.svc_tpb_client_secret))
          auth0_domain: ((auth0.svc_tpb_domain))
          auth0_svc_tpb_refresh_token: ((e2e.auth0_svc_tpb_refresh_token))
          aws_access_key_id: ((e2e.aws_access_key_id))
          aws_secret_access_key: ((e2e.aws_secret_access_key))
          azure_token: ((e2e.azure_token))
          azure_tenant_id: ((e2e.azure_tenant_id))
          azure_client_id: ((e2e.azure_client_id))
          azure_client_secret: ((e2e.azure_client_secret))
          backend_secret: ((e2e.backend_secret))
          bitbucket_server_license: ((e2e.bitbucket_server_license))
          bitbucket_client_id: ((bitbucket.svc_tpb_client_id))
          bitbucket_client_secret: ((bitbucket.svc_tpb_client_secret))
          bitbucket_svc_tpb_refresh_token: ((e2e.bitbucket_svc_tpb_refresh_token))
          github_token: ((e2e.github_token))
          github_enterprise_token: ((e2e.github_enterprise_token))
          github_app_client_id: ((github.svc_tpb_client_id))
          github_app_client_secret: ((github.svc_tpb_client_secret))
          github_svc_tpb_refresh_token: ((e2e.github_svc_tpb_refresh_token))
          gitlab_token: ((gitlab.fixtures_token))
          gke_control_plane_endpoint: ((gke.control_plane_endpoint))
          gke_app_live_view_endpoint: ((gke.app_live_view_endpoint))
          gke_service_account_token: ((gke.service_account_token))
          gke_oidc_control_plane_endpoint: ((gke_oidc.control_plane_endpoint))
          gke_oidc_client_id: ((gke_oidc.svc_tpb_client_id))
          gke_oidc_client_secret: ((gke_oidc.svc_tpb_client_secret))
          google_svc_tpb_insufficient_scope_refresh_token: ((e2e.google_svc_tpb_insufficient_scope_refresh_token))
          google_svc_tpb_refresh_token: ((e2e.google_svc_tpb_refresh_token))
          okta_client_id: ((okta.svc_tpb_client_id))
          okta_client_secret: ((okta.svc_tpb_client_secret))
          okta_audience: ((okta.svc_tpb_audience))
          okta_svc_tpb_refresh_token: ((e2e.okta_svc_tpb_refresh_token))
          vmware_cloud_services_client_id: ((e2e.vmware_cloud_services_client_id))
          vmware_cloud_services_organization_id: ((e2e.vmware_cloud_services_organization_id))
    on_failure: *on_failure_notification
    on_error: *on_failure_notification
  - name: publish
    plan:
      - in_parallel:
          - get: code
            resource: esback-core
            passed: [integration-tests]
            trigger: true
          - do:
              - get: version
                passed: [build]
              - load_var: version
                file: version/version
                reveal: true
      - task: yarn-build
        file: code/ci/yarn-build.yml
      - task: lerna-publish
        file: code/ci/publish.yml
        vars:
          git_branch: ((git_branch))
      - put: esback-core
        params:
          repository: code
          tag: version/version
          only_tag: true
    on_failure: *on_failure_notification
    on_error: *on_failure_notification
  - name: update-dev-env
    plan:
      - get: code
        resource: esback-core
        passed: [build]
        trigger: true
      - task: write-kubeconfig-file
        file: code/ci/write-kubeconfig-file.yml
        vars:
          kubeconfig: ((calatrava-env-dev.kubeconfig))
      - task: restart-k8s-deployment
        file: code/ci/restart-k8s-deployment.yml
    on_failure: *on_failure_notification
    on_error: *on_failure_notification
