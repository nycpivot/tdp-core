# To set up this pipeline, assuming you have an esback target locally setup, run:
# $ fly -t esback set-pipeline -p core-runtime -c ci/pipeline.yml -v git_branch=$TARGET_BRANCH -v initial_version=0.0.0
---
resources:
  - name: version
    type: semver
    icon: counter
    source:
      driver: s3
      bucket: esback.ci
      key: build/esback/version/((git_branch))
      initial_version: ((initial_version))
      access_key_id: ((aws.deprecated_access_key))
      secret_access_key: ((aws.deprecated_access_secret))
  - name: esback-core
    type: git
    icon: gitlab
    source:
      uri: https://gitlab.eng.vmware.com/esback/core.git
      branch: ((git_branch))
      username: ((gitlab.username))
      password: ((gitlab.core_token))
  - name: core-image
    type: registry-image
    icon: docker
    source:
      repository: harbor-repo.vmware.com/esback/internal-instance
      username: ((harbor.username))
      password: ((harbor.token))
  # Integration tests tools
  - name: ytt
    type: github-release
    icon: github
    source:
      owner: vmware-tanzu
      repository: carvel-ytt
      access_token: ((github.access_token))
  - name: cypress-image
    type: registry-image
    icon: docker
    source:
      repository: harbor-repo.vmware.com/dockerhub-proxy-cache/cypress/included
      tag: 8.5.0
  - name: bitbucket-image
    type: registry-image
    icon: docker
    source:
      repository: harbor-repo.vmware.com/dockerhub-proxy-cache/atlassian/bitbucket
      tag: 8.4.2

jobs:
  - name: reconfigure
    plan:
      - get: esback-core
        trigger: true
      - set_pipeline: self
        file: esback-core/ci/pipeline.yml
        vars:
          git_branch: ((git_branch))
          initial_version: ((initial_version))
      - set_pipeline: mr-check
        file: esback-core/ci/mr-check.yml
        vars:
          initial_version: ((initial_version))
  - name: lint-and-test
    plan:
      - get: code
        resource: esback-core
        passed: [reconfigure]
        trigger: true
      - in_parallel:
          - task: lint
            attempts: 3
            file: code/ci/lint.yml
          - task: test
            attempts: 3
            file: code/ci/unit-test.yml
  - name: bump
    plan:
      - get: esback-core
        passed: [lint-and-test]
        trigger: true
      - put: version
        params:
          pre: ((git_branch))
  - name: build
    plan:
      - in_parallel:
          - get: code
            resource: esback-core
            passed: [bump]
            trigger: true
          - do:
              - get: version
                passed: [bump]
                trigger: true
              - load_var: version
                file: version/version
                reveal: true
      - task: yarn-build
        file: code/ci/yarn-build.yml
      - task: image-build
        privileged: true
        file: code/ci/image-build.yml
      - put: core-image
        params:
          image: image/image.tar
          version: ((.:version))
  - name: integration-tests
    plan:
      - in_parallel:
          - get: ytt
          - get: cypress-image
            params: { format: oci }
          - get: bitbucket-image
            params: { format: oci }
          - get: esback-core
            passed: [build]
            trigger: true
          - get: core-image
            params: { format: oci }
            passed: [build]
            trigger: true
      - task: test
        privileged: true
        file: esback-core/ci/integration-tests.yml
        input_mapping:
          code: esback-core
          docker-image: core-image
        vars:
          gitlab_token: ((gitlab.core_token))
          github_token: ((e2e.github_token))
          github_enterprise_token: ((e2e.github_enterprise_token))
          git_branch: ((git_branch))
          bitbucket_server_license: ((e2e.bitbucket_server_license))
  - name: publish
    plan:
      - in_parallel:
          - get: code
            resource: esback-core
            passed: [integration-tests]
            trigger: true
          - do:
              - get: version
                passed: [build]
                trigger: true
              - load_var: version
                file: version/version
                reveal: true
      - task: yarn-build
        file: code/ci/yarn-build.yml
      - task: lerna-publish
        config:
          platform: linux
          image_resource:
            type: registry-image
            source:
              repository: harbor-repo.vmware.com/dockerhub-proxy-cache/library/node
              tag: 16-buster-slim
          inputs:
            - name: built-code
          params:
            ESBACK_VERSION: ((.:version))
            GIT_BRANCH: ((git_branch))
            NPM_REGISTRY: artifactory.eng.vmware.com/artifactory/api/npm/esback-npm-local
            NPM_TOKEN: ((artifactory.NPM_AUTH_TOKEN))
          run:
            dir: built-code
            path: bash
            args:
              - -exc
              - |
                ci/scripts/yarn_install
                apt update && apt install git-all --yes
                npm set "//$NPM_REGISTRY/:_authToken" $NPM_TOKEN
                git checkout "$GIT_BRANCH"
                yarn run lerna version "$ESBACK_VERSION" --no-push --yes
                yarn run lerna publish from-package --yes
      - put: esback-core
        params:
          tag: version/version
          only_tag: true
